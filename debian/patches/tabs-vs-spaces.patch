Description: Fixes inconsistency in indentation
Author: Thomas Goirand <zigo@debian.org>
Forwarded: no
Last-Update: 2014-12-04

--- python-proliantutils-0.1.1.orig/proliantutils/ilo/ribcl.py
+++ python-proliantutils-0.1.1/proliantutils/ilo/ribcl.py
@@ -437,11 +437,11 @@ class IloClient:
         boot_mode = self._check_boot_mode(result)
         if boot_mode == 'bios':
             self.set_persistent_boot(device_type)
-	    return
+            return
 
         device_list = []
-	for item in device_type:
-	    dev=item.upper()
+        for item in device_type:
+            dev=item.upper()
             if dev == 'NETWORK':
                 nic_list = self._get_nic_boot_devices(result)
                 device_list += nic_list
@@ -454,43 +454,43 @@ class IloClient:
 
     def _check_boot_mode(self, result):
         
-	if 'DESCRIPTION' in result[0]:
-	    return 'uefi'
-	else:
-	    return 'bios'
+        if 'DESCRIPTION' in result[0]:
+            return 'uefi'
+        else:
+            return 'bios'
 
     def _get_nic_boot_devices(self, result):
         nw_identifier = "NIC" 
-	pxe_enabled = "PXE"
+        pxe_enabled = "PXE"
         nic_list = []
-	pxe_nic_list = []
-	try:
-	    for item in result:
-	        if nw_identifier in item["DESCRIPTION"]:
-	            # Check if it is PXE enabled, to add it to starting of list
-		    if pxe_enabled in item["DESCRIPTION"]:
-		        pxe_nic_list.append(item["value"])
-		    else:
-		        nic_list.append(item["value"])
-	except KeyError as e:
+        pxe_nic_list = []
+        try:
+            for item in result:
+                if nw_identifier in item["DESCRIPTION"]:
+                    # Check if it is PXE enabled, to add it to starting of list
+                    if pxe_enabled in item["DESCRIPTION"]:
+                        pxe_nic_list.append(item["value"])
+                    else:
+                        nic_list.append(item["value"])
+        except KeyError as e:
             msg = "_get_nic_boot_devices failed with the KeyError:%s"
-	    raise IloError((msg)% e)
+            raise IloError((msg)% e)
 
-	all_nics = pxe_nic_list + nic_list 
+        all_nics = pxe_nic_list + nic_list 
         return all_nics
 
     def _isDisk(self, result):
-	disk_identifier = ["Logical Drive", "HDD", "Storage", "LogVol"]
-	return any(e in result for e in disk_identifier)
+        disk_identifier = ["Logical Drive", "HDD", "Storage", "LogVol"]
+        return any(e in result for e in disk_identifier)
 
     def _get_disk_boot_devices(self, result):
         disk_list=[]
-	try:
-	    for item in result:
-	        if self._isDisk(item["DESCRIPTION"]):
-		    disk_list.append(item["value"])
-	except KeyError:
-	    msg = "_get_disk_boot_devices failed with the KeyError:%s"
+        try:
+            for item in result:
+                if self._isDisk(item["DESCRIPTION"]):
+                    disk_list.append(item["value"])
+        except KeyError:
+            msg = "_get_disk_boot_devices failed with the KeyError:%s"
             raise IloError((msg)% e)
-	    
+    
         return disk_list
